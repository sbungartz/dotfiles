#!/bin/bash
set -e
# Collection of installation scripts to run when needed.

#########################
# Basics

sudo ufw enable

sudo apt install git zsh tmux htop vim-gtk xclip
sudo apt install checkinstall
sudo apt install curl
sudo apt install ranger
sudo apt install tree
sudo apt install silversearcher-ag
sudo apt install sxiv

sudo apt install ncdu
sudo apt install dstat

sudo apt install exuberant-ctags
sudo apt install python3
sudo apt install python3-pip

sudo apt install duply python-pexpect

# todo list
sudo apt install todotxt-cli
## Dependencies for ice_recur plugin
sudo gem install ice_cube optimist

# Password manager
sudo apt install pass

# Yubikey stuff
sudo apt-add-repository ppa:yubico/stable
sudo apt install yubikey-manager scdaemon
# Needs reboot to work

# google chrome
wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add - 
sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
sudo apt-get update
sudo apt-get install google-chrome-stable

# spotify
curl -sS https://download.spotify.com/debian/pubkey.gpg | sudo apt-key add -
echo deb http://repository.spotify.com stable non-free | sudo tee /etc/apt/sources.list.d/spotify.list
sudo apt-get update
sudo apt-get install spotify-client

# slack
# download dep package from slack.com
cd ~/Downloads
sudo dpkg -i slack-desktop-*-amd64.deb

# Signal Desktop
curl -s https://updates.signal.org/desktop/apt/keys.asc | sudo apt-key add -
echo "deb [arch=amd64] https://updates.signal.org/desktop/apt xenial main" | sudo tee -a /etc/apt/sources.list.d/signal-xenial.list
sudo apt update && sudo apt install signal-desktop

# Syncthing
curl -s https://syncthing.net/release-key.txt | sudo apt-key add -
echo "deb https://apt.syncthing.net/ syncthing stable" | sudo tee /etc/apt/sources.list.d/syncthing.list
sudo apt update
sudo apt install syncthing
mkdir -p ~/.config/systemd/user
curl -s https://raw.githubusercontent.com/syncthing/syncthing/master/etc/linux-systemd/user/syncthing.service > ~/.config/systemd/user/syncthing.service
systemctl --user enable syncthing.service
systemctl --user start syncthing.service
sudo ufw allow syncthing

# PDF Viewer with annotation support
sudo apt install okular
# Install extra backends to support EPUB as well
sudo apt install okular-extra-backends

# Advanced screenshots (annotate on screen)
sudo apt install flameshot

# Record screen videos
sudo apt install simplescreenrecorder
# Show pressed keys on screen
sudo apt install screenkey

# Hibiscus
sudo apt install default-jre
## https://www.willuhn.de/products/hibiscus/download.php
cd ~/.manual-builds
unzip ~/Downloads/jameica-linux64.zip

cat << FILE > ~/.local/share/applications/hibiscus.desktop
[Desktop Entry]
Name=Hibiscus
Exec=$HOME/.manual-builds/jameica/jameica.sh
Terminal=false
Type=Application
FILE

#########################
# Config Changes

# Increase Priority of Headset Mic over internal Laptop Mic:
pactl list sources
# Find symbolic name of the correct PORT for your headset. analog-input-headset-mic in this case.
# Then edit the file named accordingly and adjust the priority to the highest (value from file is multiplied by 100):
vim /usr/share/pulseaudio/alsa-mixer/paths/analog-input-headset-mic.conf

#########################
# Dev: General

# Tags for VIM navigation
sudo apt install exuberant-ctags

# ASDF Version Manager
git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.7.0

# More readable diffs
cd ~/.manual-builds
wget https://raw.githubusercontent.com/so-fancy/diff-so-fancy/master/third_party/build_fatpack/diff-so-fancy
chmod +x diff-so-fancy
sudo chown root:root diff-so-fancy
sudo mv diff-so-fancy /usr/local/bin

# Restart on file change
sudo apt install entr

# Basic clients
sudo apt install httpie

npm install -g wscat

#########################
# Dev: Bash
# Linting
sudo apt install shellcheck

#########################
# Dev: Basics
# Auto-Formatting
sudo -H pip3 install sqlparse
sudo apt install tidy

#########################
# Dev: Ruby

# Install global ruby version
asdf plugin-add ruby
latest_ruby=2.6.1
asdf install ruby $latest_ruby
asdf global ruby $latest_ruby

###############################
# Dev: golang
asdf plugin-add golang
latest_golang=1.12
asdf install golang $latest_golang
asdf global golang $latest_golang

###############################
# Dev: nodejs
asdf plugin-add nodejs
bash ~/.asdf/plugins/nodejs/bin/import-release-team-keyring
latest_nodejs=10.15.3
asdf install nodejs $latest_nodejs
asdf global nodejs $latest_nodejs

###############################
# Dev: Android
# Download Android studio tar file from website and extract to /opt

tee ~/.local/share/applications/android-studio.desktop << DESKTOP
[Desktop Entry]
Version=1.0
Terminal=false
Type=Application
Name=Android Studio
Exec=/opt/android-studio/bin/studio.sh
Icon=/opt/android-studio/bin/studio.svg
DESKTOP

# For accelerated emulation using KVM:
sudo apt install qemu-kvm
sudo adduser simon kvm

# Install udev rules to allow adb debugging
sudo apt install android-sdk-platform-tools-common
sudo udevadm control --reload-rules

#####################
# VIM
# vim YouCompleteMe dependencies
sudo apt-get install build-essential cmake python-dev python3-dev
cd ~/.vim/bundle/YouCompleteMe
# install without C support
./install.py

# Vim Spellcheck
wget -P ~/.vim/spell/ http://ftp.vim.org/vim/runtime/spell/de.utf-8.spl
wget -P ~/.vim/spell/ http://ftp.vim.org/vim/runtime/spell/de.utf-8.sug

###############################
# i3 window manager

# i3-gaps
cd ~/manual-builds
git clone https://github.com/Airblader/i3 i3-gaps
cd i3-gaps
git checkout gaps
# install dependencies as for Ubuntu 18.04
sudo apt install libxcb1-dev libxcb-keysyms1-dev libpango1.0-dev libxcb-util0-dev libxcb-icccm4-dev libyajl-dev libstartup-notification0-dev libxcb-randr0-dev libev-dev libxcb-cursor-dev libxcb-xinerama0-dev libxcb-xkb-dev libxkbcommon-dev libxkbcommon-x11-dev autoconf libxcb-xrm0 libxcb-xrm-dev automake libxcb-shape0-dev
# compile & install (disabling sanitizers for release build)
autoreconf --force --install
rm -rf build/
mkdir -p build && cd build/
../configure --prefix=/usr --sysconfdir=/etc --disable-sanitizers
make
sudo checkinstall --pkgname i3-wm

# xfce tools to add some functionality
sudo apt install xfce4-notifyd
#sudo apt install xfce4-display-manager

sudo apt install blueman

# required tools
sudo apt install fonts-roboto fonts-font-awesome fonts-noto-color-emoji
sudo apt install i3lock nitrogen lxappearance compton i3blocks rofi pavucontrol kbdd xfce4-power-manager xdotool

# Font-Awesome 5
cd ~/.manual-builds
wget -O fontawesome.zip https://use.fontawesome.com/releases/v5.12.0/fontawesome-free-5.12.0-desktop.zip
unzip fontawesome.zip
rm fontawesome.zip
cd fontawesome-free-5.12.0-desktop/otfs
sudo mkdir /usr/share/fonts/opentype/fontawesome
sudo cp ./*.otf /usr/share/fonts/opentype/fontawesome
sudo fc-cache -f -v

# Noto non-color Emoji
cd ~/.manual-builds
take font-noto-emoji
wget -O noto-emoji.zip https://noto-website-2.storage.googleapis.com/pkgs/NotoEmoji-unhinted.zip
unzip noto-emoji.zip
rm noto-emoji.zip
sudo cp NotoEmoji-Regular.ttf /usr/share/fonts/truetype/noto
sudo chmod 644 /usr/share/fonts/truetype/noto/NotoEmoji-Regular.ttf
sudo fc-cache -f -v

# aptitude for apt blocklet
sudo apt-get install aptitude
# add apt post hook to update applet after apt actions
cd /etc/apt/apt.conf.d
echo -e 'APT::Update::Post-Invoke { "pkill -RTMIN+5 i3blocks || true"; };\nDPkg::Post-Invoke { "pkill -RTMIN+5 i3blocks || true"; };' | sudo tee 80i3blocks > /dev/null
sudo chown root:root 80i3blocks
sudo chmod 644 80i3blocks
# add crontab entry to update regularily
echo '0 * * * * apt-get update' | sudo tee /etc/cron.d/apt-update >/dev/null

# for syncthing blocklet
sudo -H pip3 install syncthing

# playerctl for music control
cd ~/.manual-builds
wget -O playerctl.deb https://github.com/acrisci/playerctl/releases/download/v0.5.0/playerctl-0.5.0_amd64.deb
sudo dpkg -i playerctl.deb

# Touchpad settings
sudo tee /usr/share/X11/xorg.conf.d/41-libinput-custom.conf <<EOF
Section "InputClass"
    Identifier "libinput touchpad catchall"
    MatchIsTouchpad "on"
    Driver "libinput"
    Option "Tapping" "on"
    Option "NaturalScrolling" "true"
EndSection
EOF

# Touchpad fix on Lenovo Yoga 13
sudo tee /etc/systemd/system/touchpad-reload.service <<EOF
[Unit]
Description=Reload psmouse after boot since touchpad does not work otherwise on Lenovo Yoga 13

[Service]
Type=oneshot
ExecStart=/bin/bash -c "rmmod psmouse && modprobe psmouse"

[Install]
WantedBy=graphical.target
EOF
sudo systemctl enable touchpad-reload.service

### Manual Setup:
# Configure these settings using lxappearance:
# Window-theme: Ambience, Symbols: Ubuntu-Mono-Dark
# Mauszeiger: DMZ (WeiÃŸ)
# Font: Ubuntu 11

# Configure Terminal font to Ubuntu Mono Regular 12

# Pick Wallpaper using nitrogen
ln -s <path to wallpaper> ~/.config/background
# Super + P to generate lockscreen
